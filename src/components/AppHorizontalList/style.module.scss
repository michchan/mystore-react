@import '../../style/_theme.scss';

$list-container-heights: (
    null: 200px,
    small: 230px,
    medium: 250px,
    large: 270px,
    xlarge: 300px,
);

$list-title-paddings: (
    null: 12px 12px 10px 12px,
    small: 14px 14px 11px 14px,
    medium: 16px 16px 12px 16px,
    large: 18px 18px 13px 18px,
    xlarge: 20px 20px 14px 20px,
);

$list-spacer-width: (
    null: 4px,
    small: 6px,
    medium: 8px,
    large: 14px,
    xlarge: 20px
);

.container {
    display: flex;
    width: 100vw;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    background-color: #fff;
    border-top: $border-width solid $border-color;
    border-bottom: $border-width-bold solid $border-color-accent;

    .listTitle {
        color: $primary-color;
        @include font-size($h3-font-sizes);
        @include get(padding, $list-title-paddings);
    }
    
    .listContainer {
        display: flex;
        flex-direction: row;
        width: 100vw;
        @include get(height, $list-container-heights);
        align-items: flex-start;
        justify-content: flex-start;
        flex-wrap: nowrap;
        overflow-x: scroll;
        overflow-y: hidden;
        -webkit-overflow-scrolling: touch;
        -ms-overflow-style: -ms-autohiding-scrollbar;
    }
    
    .spacer {
        flex: 0 0 auto;
        @include get(width, $list-spacer-width);
    }

    .noResultContainer {
        display: flex;
        flex: 1;
        width: 100vw;
        height: 100%;
        align-items: center;
        justify-content: center;

        .noResultText {
            color: $grey-text-color;
            @include font-size($h4-font-sizes);
            font-weight: 100;
            text-align: center;
        }
    }
}

/* Classes for react-transition group css transition */

.containerTransition {
    opacity: 1;
    // Placeholder class for determining transition class name (after modulized)
}

.containerTransition-enter {
    opacity: 0.01;
    @include translateY(-100%);
}

.containerTransition-enter-active {
    opacity: 1;
    @include translateY(0%);
    @include transition(all 300ms ease-out);
}

.containerTransition-exit {
    opacity: 1;
    @include translateY(0%);
}

.containerTransition-exit-active {
    opacity: 0.01;
    @include translateY(-100%);
    @include transition(all 300ms ease-out);
}